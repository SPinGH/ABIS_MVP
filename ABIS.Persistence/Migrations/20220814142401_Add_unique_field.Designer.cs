// <auto-generated />
using System;
using ABIS.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ABIS.Persistence.Migrations
{
    [DbContext(typeof(SqlServerDbContext))]
    [Migration("20220814142401_Add_unique_field")]
    partial class Add_unique_field
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ABIS.Common.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TestItemId")
                        .HasColumnType("int");

                    b.Property<bool>("isRight")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TestItemId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("ABIS.Common.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DomainName")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("ABIS.Common.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CourseStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ABIS.Common.Entities.CourseSubItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("CourseSubItems");
                });

            modelBuilder.Entity("ABIS.Common.Entities.Progress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StructuralUnitId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StructuralUnitId");

                    b.HasIndex("UserId");

                    b.ToTable("Progresses");
                });

            modelBuilder.Entity("ABIS.Common.Entities.RatioAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TestItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestItemId");

                    b.ToTable("RatioAnswers");
                });

            modelBuilder.Entity("ABIS.Common.Entities.RatioQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RightAnswerId")
                        .HasColumnType("int");

                    b.Property<int>("TestItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RightAnswerId")
                        .IsUnique();

                    b.HasIndex("TestItemId");

                    b.ToTable("RatioQuestions");
                });

            modelBuilder.Entity("ABIS.Common.Entities.StructuralUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseSubItemId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CourseSubItemId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("StructuralUnits");

                    b.HasDiscriminator<string>("Discriminator").HasValue("StructuralUnit");
                });

            modelBuilder.Entity("ABIS.Common.Entities.TestItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("TestUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestUnitId");

                    b.ToTable("TestItems");
                });

            modelBuilder.Entity("ABIS.Common.Entities.TestStatistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRight")
                        .HasColumnType("bit");

                    b.Property<int>("TestItemId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TestItemId");

                    b.HasIndex("UserId");

                    b.ToTable("TestStatistics");
                });

            modelBuilder.Entity("ABIS.Common.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CoursesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("CourseUser");
                });

            modelBuilder.Entity("ABIS.Common.Entities.TestUnit", b =>
                {
                    b.HasBaseType("ABIS.Common.Entities.StructuralUnit");

                    b.HasDiscriminator().HasValue("TestUnit");
                });

            modelBuilder.Entity("ABIS.Common.Entities.TheoryUnit", b =>
                {
                    b.HasBaseType("ABIS.Common.Entities.StructuralUnit");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("TheoryUnit");
                });

            modelBuilder.Entity("ABIS.Common.Entities.Answer", b =>
                {
                    b.HasOne("ABIS.Common.Entities.TestItem", "TestItem")
                        .WithMany("Answers")
                        .HasForeignKey("TestItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestItem");
                });

            modelBuilder.Entity("ABIS.Common.Entities.CourseSubItem", b =>
                {
                    b.HasOne("ABIS.Common.Entities.Course", "Course")
                        .WithMany("CourseSubItem")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ABIS.Common.Entities.Progress", b =>
                {
                    b.HasOne("ABIS.Common.Entities.Course", "Course")
                        .WithMany("Progresses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ABIS.Common.Entities.StructuralUnit", "StructuralUnit")
                        .WithMany("Progresses")
                        .HasForeignKey("StructuralUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ABIS.Common.Entities.User", "User")
                        .WithMany("Progresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("StructuralUnit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ABIS.Common.Entities.RatioAnswer", b =>
                {
                    b.HasOne("ABIS.Common.Entities.TestItem", "TestItem")
                        .WithMany("RatioAnswers")
                        .HasForeignKey("TestItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestItem");
                });

            modelBuilder.Entity("ABIS.Common.Entities.RatioQuestion", b =>
                {
                    b.HasOne("ABIS.Common.Entities.RatioAnswer", "RatioAnswer")
                        .WithOne("RatioQuestion")
                        .HasForeignKey("ABIS.Common.Entities.RatioQuestion", "RightAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ABIS.Common.Entities.TestItem", "TestItem")
                        .WithMany("RatioQuestions")
                        .HasForeignKey("TestItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RatioAnswer");

                    b.Navigation("TestItem");
                });

            modelBuilder.Entity("ABIS.Common.Entities.StructuralUnit", b =>
                {
                    b.HasOne("ABIS.Common.Entities.CourseSubItem", "CourseSubItem")
                        .WithMany("StructuralUnits")
                        .HasForeignKey("CourseSubItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseSubItem");
                });

            modelBuilder.Entity("ABIS.Common.Entities.TestItem", b =>
                {
                    b.HasOne("ABIS.Common.Entities.TestUnit", "TestUnit")
                        .WithMany("TestItems")
                        .HasForeignKey("TestUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestUnit");
                });

            modelBuilder.Entity("ABIS.Common.Entities.TestStatistic", b =>
                {
                    b.HasOne("ABIS.Common.Entities.TestItem", "TestItem")
                        .WithMany("TestStatistics")
                        .HasForeignKey("TestItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ABIS.Common.Entities.User", "User")
                        .WithMany("TestStatistics")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ABIS.Common.Entities.User", b =>
                {
                    b.HasOne("ABIS.Common.Entities.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.HasOne("ABIS.Common.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ABIS.Common.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ABIS.Common.Entities.Company", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ABIS.Common.Entities.Course", b =>
                {
                    b.Navigation("CourseSubItem");

                    b.Navigation("Progresses");
                });

            modelBuilder.Entity("ABIS.Common.Entities.CourseSubItem", b =>
                {
                    b.Navigation("StructuralUnits");
                });

            modelBuilder.Entity("ABIS.Common.Entities.RatioAnswer", b =>
                {
                    b.Navigation("RatioQuestion")
                        .IsRequired();
                });

            modelBuilder.Entity("ABIS.Common.Entities.StructuralUnit", b =>
                {
                    b.Navigation("Progresses");
                });

            modelBuilder.Entity("ABIS.Common.Entities.TestItem", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("RatioAnswers");

                    b.Navigation("RatioQuestions");

                    b.Navigation("TestStatistics");
                });

            modelBuilder.Entity("ABIS.Common.Entities.User", b =>
                {
                    b.Navigation("Progresses");

                    b.Navigation("TestStatistics");
                });

            modelBuilder.Entity("ABIS.Common.Entities.TestUnit", b =>
                {
                    b.Navigation("TestItems");
                });
#pragma warning restore 612, 618
        }
    }
}
